apiVersion: apps/v1
kind: Deployment
metadata:
  name: backstage
  namespace: backstage
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backstage
  template:
    metadata:
      labels:
        app: backstage
    spec:
      containers:
        - name: backstage
          image: ghcr.io/sanveld/backstage-k8s-backend:latest
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 7007
          envFrom:
            - secretRef:
                name: postgres-secrets
---
apiVersion: v1
kind: Service
metadata:
  name: backstage-service
  namespace: backstage
spec:
  selector:
    app: backstage
  ports:
    - protocol: TCP
      port: 80
      targetPort: http
  type: LoadBalancer
---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: backstage-ingress
#   namespace: backstage
#   annotations:
#     cert-manager.io/cluster-issuer: letsencrypt-prod
#     kubernetes.io/ingress.class: traefik
#     traefik.ingress.kubernetes.io/router.tls: "true"
#     traefik.ingress.kubernetes.io/router.tls.options: default
# spec:
#   tls:
#   - hosts:
#     - backstage.everythingascode.dev
#     secretName: backstage-tls-secret
#   rules:
#   - host: backstage.everythingascode.dev
#     http:
#       paths:
#       - path: /
#         pathType: Prefix
#         backend:
#           service:
#             name: backstage-service
#             port:
#               number: 80
