# values.yaml for ArgoCD Helm chart

## Global settings
global:
  image:
    tag: v2.8.4  # Specify ArgoCD version
  securityContext:
    runAsUser: 999
    runAsGroup: 999
    fsGroup: 999

## Server settings
server:
  # Enable the server component
  enabled: true
  
  # Configure ingress
  ingress:
    enabled: false  # Set to true if using ingress
    # ingressClassName: nginx
    # annotations: {}
    # hosts:
    #   - argocd.example.com
  
  # Configure server service
  service:
    type: LoadBalancer  # Use LoadBalancer for minikube tunnel
    port: 80
    targetPort: 8080
  
  # Additional server settings
  extraArgs:
    - --insecure  # Remove in production

  # Resources
  resources:
    limits:
      cpu: 300m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi

## Repo server settings
repoServer:
  enabled: true
  resources:
    limits:
      cpu: 300m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi

## Application controller settings
controller:
  enabled: true
  resources:
    limits:
      cpu: 500m
      memory: 1Gi
    requests:
      cpu: 250m
      memory: 256Mi

## Dex (OIDC provider) settings - disabled by default
dex:
  enabled: false

## Redis settings
redis:
  enabled: true
  resources:
    limits:
      cpu: 200m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 64Mi

## High Availability settings - disabled for minikube
ha:
  enabled: false

## RBAC settings
rbac:
  # Create RBAC resources
  create: true
  # Use default policy for RBAC
  policyMatcherMode: "glob"

## Notifications - disabled by default
notifications:
  enabled: false

## ApplicationSet controller - enabled by default
applicationSet:
  enabled: true
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi

## Config management plugins
configs:
  # Secret management
  secret:
    createSecret: true
  
  # SSH known hosts data
  knownHosts:
    data:
      ssh_known_hosts: |
        github.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCj7ndNxQowgcQnjshcLrqPEiiphnt+VTTvDP6mHBL9j1aNUkY4Ue1gvwnGLVlOhGeYrnZaMgRK6+PKCUXaDbC7qtbW8gIkhL7aGCsOr/C56SJMy/BCZfxd1nWzAOxSDPgVsmerOBYfNqltV9/hWCqBywINIR+5dIg6JTJ72pcEpEjcYgXkE2YEFXV1JHnsKgbLWNlhScqb2UmyRkQyytRLtL+38TGxkxCflmO+5Z8CSSNY7GidjMIZ7Q4zMjA2n1nGrlTDkzwDCsw+wqFPGQA179cnfGWOWRVruj16z6XyvxvjJwbz0wQZ75XK5tKSb7FNyeIEs4TT4jk+S4dhPeAUC5y+bDYirYgM4GC7uEnztnZyaVWQ7B381AK4Qdrwt51ZqExKbQpTUNn+EjqoTwvqNj4kqx5QUCI0ThS/YkOxJCXmPUWZbhjpCg56i+2aB6CmK2JGhn57K5mj0MNdBXA4/WnwH6XoPWJzK5Nyu2zB3nAZp+S5hpQs+p1vN1/wsjk=
        gitlab.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCsj2bNKTBSpIYDEGk9KxsGh3mySTRgMtXL583qmBpzeQ+jqCMRgBqB98u3z++J1sKlXHWfM9dyhSevkMwSbhoR8XIq/U0tCNyokEi/ueaBMCvbcTHhO7FcwzY92WK4Yt0aGROY5qX2UKSeOvuP4D6TPqKF1onrSzH9bx9XUf2lEdWT/ia1NEKjunUqu1xOB/StKDHMoX4/OKyIzuS0q/T1zOATthvasJFoPrAjkohTyaDUz2LN5JoH839hViyEG82yB+MjcFV5MU3N1l1QL3cVUCh93xSaua1N85qivl+siMkPGbO5xR/En4iEY6K2XPASUEMaieWVNTRCtJ4S8H+9
        ssh.dev.azure.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWh0t+iHYam/pJRqpk5FjmtmGuCqEU7oOGD6RRYi7kOQ2e7MJvfriXNGr
  
  # Configure repository credentials
  repositories:
    # You can add repositories here for automatic registration
    # Example:
    # - url: https://github.com/argoproj/argocd-example-apps.git
    #   name: example-apps
    #   type: git

## Custom TLS certificates for ArgoCD components
certificates:
  enabled: false
  # Create self-signed certificates if none provided by user
  createSelfSignedCert: true

## Additional application controller settings
controller:
  metrics:
    enabled: true
    serviceMonitor:
      enabled: false

## Configure Argo CD to use a specific namespace for deployments
# destination:
#   namespace: apps

## Configure webhook settings
webhook:
  enabled: false

## Network policy settings
networkPolicy:
  enabled: false